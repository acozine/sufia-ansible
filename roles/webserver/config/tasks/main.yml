---
# Role: webserver/config
# roles/webserver/config/tasks/main.yml
# 
# Apache configuration; setup apache configuration files and apply ssl certs when needed
# assumes entire site is either http or https

- name: create apache vhosts file
  become: yes
  template: src={{ webserver }}_config.j2 dest="{{ passenger_root }}/{{ project_name }}.conf" owner=root group=root backup=no
  when: not use_ssl

- name: remove default apache site
  become: yes
  file: path={{ apache_default }} state=absent

- name: symlink apache config
  become: yes
  file: src=/etc/apache2/sites-available/{{ project_name }}.conf dest=/etc/apache2/sites-enabled/{{ project_name }}.conf state=link
  when: 
    (not use_ssl and ansible_distribution == "Ubuntu") or
    (not use_ssl and ansible_distribution == "Debian")

# currently this role only supports ssl with passenger
- name: enable ssl module
  become: yes
  command: a2enmod ssl
  when: use_ssl

- name: enable rewrite module
  become: yes
  command: a2enmod rewrite
  when:
    (ansible_distribution == "Ubuntu") or
    (ansible_distribution == "Debian")

- name: copy SSL key/cert/bundle to server
  become: yes
  copy:
    dest: "{{ item.value.destination }}"
    src: "{{ item.value.local_file}}"
    group: root
    owner: root
    mode: 0644
    backup: yes
  with_dict: "{{ ssl_creds }}"
  when: use_ssl

- name: create apache SSL vhosts file
  become: yes
  template: src=apache_ssl_config.j2 dest=/etc/apache2/sites-available/{{ project_name }}_ssl.conf owner=root group=root backup=yes
  when: use_ssl

- name: symlink SSL apache config
  become: yes
  file: src=/etc/apache2/sites-available/{{ project_name }}_ssl.conf dest=/etc/apache2/sites-enabled/{{ project_name }}_ssl.conf state=link
  when: use_ssl

- name: restart apache
  become: yes
  service: name={{ apache }} state=restarted
