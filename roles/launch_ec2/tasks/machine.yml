---
# ROLE: launch_ec2
# roles/launch_ec2/tasks/main.yml
#
# Launches a new ec2 instance and attaches dedicated data volume

- name: provision an ec2 instance
  ec2:
    key_name: '{{ ec2_key }}' 
    region: '{{ ec2_region }}'
    aws_access_key: '{{ ec2_access_key }}'
    aws_secret_key: '{{ ec2_secret_key }}'
    vpc_subnet_id: '{{ vpc_subnet_id }}'
    assign_public_ip: yes
    groups: ['{{ ec2_security_group }}', '{{ internal_network }}']
    instance_type: '{{ ec2_instance_type }}'
    image: '{{ ec2_image }}'
    wait: true
    count: 1
    state: present
    count_tag:
      Name: '{{ aws_tag }}'
    instance_tags: 
      Name: '{{ aws_tag }}'
  register: ec2

- name: Build and associate volumes
  ec2_vol:
    instance: '{{ ec2.instance_ids[0] }}'
    volume_size: "{{ item.value.size }}"
    device_name: "{{ item.key }}"
    delete_on_termination: "{{ item.value.delete }}"
    volume_type: "{{ item.value.type }}"
    region: '{{ ec2_region }}'
    aws_access_key: '{{ ec2_access_key }}'
    aws_secret_key: '{{ ec2_secret_key }}'
  with_dict: " {{ aws_vol }}"
  register: machine_vols

- name: associate EIP with instance
  ec2_eip:
    in_vpc: yes
    reuse_existing_ip_allowed: yes
    state: present
    device_id: '{{ ec2.instance_ids[0] }}'
    region: '{{ ec2_region }}'
    aws_access_key: '{{ ec2_access_key }}'
    aws_secret_key: '{{ ec2_secret_key }}'
  register: instance_pip
  when: elastic

#This has to come after elastic IP due to register's behavior on skips
- name: Set non-elastic IP of instance
  set_fact:
    instance_pip: '{{ ec2.instances[0] }}'
  when: not elastic

- name: Add all instance public IPs to in-memory host group
  add_host: hostname='{{ instance_pip.public_ip }}' groups='{{ newbox_group }}'
  with_items: '{{ ec2.instances }}'

- name: Add all instance public IPs to on-disc host group
  lineinfile: dest=hosts line='{{ instance_pip.public_ip }}' insertafter='{{ host_group }}'
  with_items: '{{ ec2.instances }}'

- name: give ssh time to come up
  wait_for: host='{{ instance_pip.public_ip }}' port=22 state=started
  with_items: '{{ ec2.instances }}'

- name: pause another few seconds for other services to start
  pause: seconds=5
